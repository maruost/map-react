{"version":3,"sources":["components/Map.js","components/Intro.js","components/Place.js","components/PlacesList.js","App.js","reportWebVitals.js","index.js"],"names":["Map","props","useState","latitude","longitude","zoom","viewport","setViewport","className","style","width","height","mapStyle","accessToken","onViewportChange","Intro","exact","to","Place","onClick","e","preventDefault","onSelect","point","name","rating","starRatedColor","starEmptyColor","numberOfStars","starDimension","starSpacing","PlacesList","points","map","i","properties","App","React","selectedPoint","setSelectedPoint","handlePoints","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"604DAKe,SAASA,EAAIC,GAAQ,IAAD,EACDC,mBAAS,CACvCC,SAAU,UACVC,UAAW,UACXC,KAAM,KAJyB,mBAC1BC,EAD0B,KAChBC,EADgB,KAOjC,OACE,sBAAKC,UAAU,MAAf,UACE,cAAC,IAAD,2BACMF,GADN,IAEEG,MAAO,CAAEC,MAAO,OAAQC,OAAQ,SAChCC,SAAS,kCACTC,YAAY,+FACZV,SAAUG,EAASH,SACnBC,UAAWE,EAASF,UACpBC,KAAMC,EAASD,KACfS,iBAAkBP,KATtB,O,0BCVW,SAASQ,IACtB,OACE,qBAAKP,UAAU,QAAf,SACE,qBAAKA,UAAU,eAAf,SACE,sBAAKA,UAAU,iBAAf,UACE,qBAAIA,UAAU,eAAd,4FACgB,uBACd,+HAFF,+EAIA,cAAC,IAAD,CAASQ,OAAK,EAACC,GAAG,OAAlB,SACE,wBAAQT,UAAU,yBAAlB,uGCVG,SAASU,EAAMjB,GAC5B,OACE,sBACEO,UAAU,qBACVW,QAAS,SAACC,GACRA,EAAEC,iBACFpB,EAAMqB,SAASrB,EAAMsB,QAJzB,UAOE,mBAAGf,UAAU,oBAAb,SAAkCP,EAAMuB,OACxC,sBAAKhB,UAAU,sBAAf,UACE,mBAAGA,UAAU,oBAAb,SAAkCP,EAAMwB,SACxC,cAAC,IAAD,CACEA,OAAQxB,EAAMwB,OACdC,eAAe,qBACfC,eAAe,qBACfC,cAAe,EACfJ,KAAK,SACLK,cAAc,OACdC,YAAY,cCnBP,SAASC,EAAW9B,GACjC,OACE,qBAAKO,UAAU,cAAf,SACGP,EAAM+B,OAAOC,KAAI,SAACV,EAAOW,GACxB,OACE,cAAChB,EAAD,CAEEM,KAAMD,EAAMY,WAAWX,KACvBC,OAAQF,EAAMY,WAAWV,OACzBH,SAAUrB,EAAMqB,SAChBC,MAAOA,GAJFW,QCFF,SAASE,IAAO,IAAD,EACcC,IAAMnC,SAAS,MAD7B,mBACrBoC,EADqB,KACNC,EADM,KAG5B,SAASC,EAAajB,GACpBgB,EAAiBhB,GAGnB,OACE,sBAAKf,UAAU,MAAf,UACE,cAAC,IAAD,CAAOQ,OAAK,EAACyB,KAAK,IAAlB,SACE,cAAC1B,EAAD,MAEF,cAAC,IAAD,CAAOC,OAAK,EAACyB,KAAK,OAAlB,SACE,sBAAKjC,UAAU,WAAf,UACE,cAACuB,EAAD,CAAYC,OAAQA,IAAiBV,SAAUkB,IAC/C,cAACxC,EAAD,CACEsB,SAAUkB,EACVR,OAAQA,IACRM,cAAeA,YCzB3B,IAYeI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAACjB,EAAD,QAGJkB,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b4bef885.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport StarRatings from \"react-star-ratings\";\r\nimport MapGL from \"@urbica/react-map-gl\";\r\nimport \"mapbox-gl/dist/mapbox-gl.css\";\r\n\r\nexport default function Map(props) {\r\n  const [viewport, setViewport] = useState({\r\n    latitude: 54.710157,\r\n    longitude: 20.510137,\r\n    zoom: 11,\r\n  });\r\n\r\n  return (\r\n    <div className=\"map\">\r\n      <MapGL\r\n        {...viewport}\r\n        style={{ width: \"100%\", height: \"100vh\" }}\r\n        mapStyle=\"mapbox://styles/mapbox/light-v9\"\r\n        accessToken=\"pk.eyJ1IjoibWFsaXNoYTEzIiwiYSI6ImNrazl3ZDl3cDExeHYybm12bW9pbnhlMjYifQ.mmcm2tVLlFcZ6cxRe7CRUg\"\r\n        latitude={viewport.latitude}\r\n        longitude={viewport.longitude}\r\n        zoom={viewport.zoom}\r\n        onViewportChange={setViewport}\r\n      />\r\n      ;\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nexport default function Intro() {\r\n  return (\r\n    <div className=\"intro\">\r\n      <div className=\"intro__image\">\r\n        <div className=\"intro__wrapper\">\r\n          <h1 className=\"intro__title\">\r\n            Туристические <br />\r\n            <span>точки притяжения</span> Калининграда\r\n          </h1>\r\n          <NavLink exact to=\"/map\">\r\n            <button className=\"button button_size_big\">\r\n              Перейти к карте\r\n            </button>\r\n          </NavLink>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport StarRatings from \"react-star-ratings\";\r\n\r\nexport default function Place(props) {\r\n  return (\r\n    <div\r\n      className=\"places-list__point\"\r\n      onClick={(e) => {\r\n        e.preventDefault();\r\n        props.onSelect(props.point);\r\n      }}\r\n    >\r\n      <p className=\"places-list__name\">{props.name}</p>\r\n      <div className=\"places-list__rating\">\r\n        <p className=\"places-list__rate\">{props.rating}</p>\r\n        <StarRatings\r\n          rating={props.rating}\r\n          starRatedColor=\"rgb(196, 196, 196)\"\r\n          starEmptyColor=\"rgb(109, 122, 130)\"\r\n          numberOfStars={5}\r\n          name=\"rating\"\r\n          starDimension=\"15px\"\r\n          starSpacing=\"3px\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Place from \"./Place\";\r\n\r\nexport default function PlacesList(props) {\r\n  return (\r\n    <div className=\"places-list\">\r\n      {props.points.map((point, i) => {\r\n        return (\r\n          <Place\r\n            key={i}\r\n            name={point.properties.name}\r\n            rating={point.properties.rating}\r\n            onSelect={props.onSelect}\r\n            point={point}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport Map from \"./components/Map\";\nimport * as points from \"./data/points.json\";\nimport { Route } from \"react-router-dom\";\nimport Intro from \"./components/Intro\";\nimport PlacesList from \"./components/PlacesList\";\n\nexport default function App() {\n  const [selectedPoint, setSelectedPoint] = React.useState(null);\n\n  function handlePoints(point) {\n    setSelectedPoint(point);\n  }\n\n  return (\n    <div className=\"App\">\n      <Route exact path=\"/\">\n        <Intro />\n      </Route>\n      <Route exact path=\"/map\">\n        <div className=\"map-page\">\n          <PlacesList points={points.features} onSelect={handlePoints} />\n          <Map\n            onSelect={handlePoints}\n            points={points.features}\n            selectedPoint={selectedPoint}\n          ></Map>\n        </div>\n      </Route>\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { HashRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}